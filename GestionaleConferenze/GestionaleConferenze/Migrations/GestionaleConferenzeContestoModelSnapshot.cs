// <auto-generated />
using System;
using GestionaleConferenze.Models.EF_DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GestionaleConferenze.Migrations
{
    [DbContext(typeof(GestionaleConferenzeContesto))]
    partial class GestionaleConferenzeContestoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GestionaleConferenze.Models.Autore", b =>
                {
                    b.Property<int>("AutoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AutoreId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("Email");

                    b.Property<string>("Skills")
                        .IsRequired()
                        .HasColumnName("Skills")
                        .HasMaxLength(25);

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnName("Telefono");

                    b.HasKey("AutoreId");

                    b.ToTable("Autori");
                });

            modelBuilder.Entity("GestionaleConferenze.Models.Presentazione", b =>
                {
                    b.Property<int>("PresentazioneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PresentazioneId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataFine")
                        .HasColumnName("DataFine");

                    b.Property<DateTime>("DataInizio")
                        .HasColumnName("DataInizio");

                    b.Property<int>("Livello")
                        .HasColumnName("Livello");

                    b.Property<string>("Titolo")
                        .IsRequired()
                        .HasColumnName("Tipo")
                        .HasMaxLength(25);

                    b.HasKey("PresentazioneId");

                    b.ToTable("Presentazioni");
                });

            modelBuilder.Entity("GestionaleConferenze.Models.Registrazione", b =>
                {
                    b.Property<int>("RegistrazioneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RegistrazioneId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AutoreId");

                    b.Property<int>("PresentazioneId");

                    b.HasKey("RegistrazioneId");

                    b.HasIndex("AutoreId");

                    b.HasIndex("PresentazioneId");

                    b.ToTable("Registrazioni");
                });

            modelBuilder.Entity("GestionaleConferenze.Models.Registrazione", b =>
                {
                    b.HasOne("GestionaleConferenze.Models.Autore", "Autore")
                        .WithMany("Registrazioni")
                        .HasForeignKey("AutoreId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GestionaleConferenze.Models.Presentazione", "Presentazione")
                        .WithMany("Registrazioni")
                        .HasForeignKey("PresentazioneId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
